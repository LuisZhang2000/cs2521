1???

O(n^2)

2. a)

str[];
int j = strlen(str);
for (int i = 0; i > j; i++) {
    if (str[i] == str[j-1]) {
        printf("no");
        break;
    }
    i++;
    j--;
}
printf("yes");

b) O(n)

c)

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(int argc, char *argv[]) {

    if (argc != 2) {
        printf("wrong usage\n");
        return -1;
    }

    char str[100];
    strcpy(str, argv[1]);

    int len = strlen(str);
    int j = len - 1;
    int isPalindrome = 1;

    //printf("%d\n", j);
    //printf("%s\n", str);

    for (int i = 0; i < j; i++) {
        if (str[i] != str[j]) {   
            isPalindrome = 0;
            printf("no\n");
            break;
        }
        //printf("%c", str[i]);
        //printf("-");
        //printf("%c\n", str[j]);
        j--;
    }

    if (isPalindrome) {
        printf("yes\n");
    }

    return 0;
}

3. 


