1. Infix is the same as prefix when the tree only has right sub-trees
All output orders are the same when there is an empty tree or trees with one node

2.

int countInternal (BSTree t) {

    int leftCount = countInternal(t->left);
    int rightCount = count(t->right);

    if (t != NULL) {
        return 0;
    }

    else {
        return 1 + leftCount + rightCount;
    }

}

note: need to implement if t->left and t->right are NULL as well

3. 

int nodeDepth (BSTree t, int key) { 

    if (t == NULL) {
        return -1;
    }
    else if (t->value == key) {
        return 0;
    }
    else if (t->value < key) {
        return 1 + nodeDepth(t->left);
    }
    else if (t->value > key) {
        return 1 + nodeDepth(t->right);
    }   

}

*4.

int BSTreeMaxBranchLen(BSTree t) { 

    int leftH = BSTreeMaxBranchLen(t->left);
    int rightH = BSTreeMaxBranchLen(t->right)

    if (t == NULL) {
        return -1;
    }
    else if (t->left == NULL && t->right == NULL) {
        return 0;
    }
    else {
        if (leftH > rightH)
            return 1 + leftH;
        else 
            return 1 + rightH;
    }
}

